pipeline {
    agent any

	parameters {
        extendedChoice(name: 'SELECTED_VALUE', description: 'Select a value', type: 'PT_SINGLE_SELECT', groovyScript: 'return ["ALL","A14", "A43"]', multiSelectDelimiter: ',', quoteValue: false)
    }

    stages {
        stage('Checkout') {
            steps {
            checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/ShubhJoshi15/Jenkins_test.git']])
            }
        }

        stage('Build') {
			  steps {
				   bat 'mvn clean install'
			  }
		}

		stage('Run') {
			  steps {
			     dir('target'){
				   script{
					def options = ['A14', 'A43','ALL']
					def userInput = input(
                        id: 'userInput',
                        message: 'Select an option:',
                        parameters: [choice(name: 'OPTION', choices: options.join('\n'), description: 'Select an option')]
                    )
					def selectedOption = userInput['OPTION']

					if(selectedValue == "ALL"){
						bat "java -jar Jenkins_test-1.0-SNAPSHOT.jar ${options.join(' ')}"
					}else{
						 bat "java -jar Jenkins_test-1.0-SNAPSHOT.jar ${selectedOption}"
					}


				   }

					}
			  }
		}


    }
}